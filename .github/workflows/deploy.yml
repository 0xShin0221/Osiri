name: Deploy

on:
  push:
    branches: [develop, main]
  workflow_dispatch:

jobs:
  check-paths:
    runs-on: ubuntu-latest
    outputs:
      supabase: ${{ steps.filter.outputs.supabase }}
      cloudrun: ${{ steps.filter.outputs.cloudrun }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            supabase:
              - 'supabase/**'
            cloudrun:
              - 'cloudrun/**'

  supabase-deploy:
    needs: check-paths
    if: needs.check-paths.outputs.supabase == 'true'
    runs-on: ubuntu-latest
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_PROJECT_ID: ${{ github.ref == 'refs/heads/main' && secrets.PRODUCTION_PROJECT_ID || secrets.STAGING_PROJECT_ID }}
      SUPABASE_DB_PASSWORD: ${{ github.ref == 'refs/heads/main' && secrets.PRODUCTION_DB_PASSWORD || secrets.STAGING_DB_PASSWORD }}
      ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Deploy Database Changes
        run: |
          supabase link --project-ref $SUPABASE_PROJECT_ID
          supabase db push --debug

      - name: Deploy Edge Functions
        run: supabase functions deploy --project-ref $SUPABASE_PROJECT_ID

      - name: Notify Slack
        if: ${{ env.ENVIRONMENT == 'production' }}
        uses: tokorom/action-slack-incoming-webhook@main
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          text: |
            ðŸš€ Deployment Complete
            Environment: ${{ env.ENVIRONMENT }}
            Commit: ${{ github.sha }}
            Branch: ${{ github.ref_name }}
