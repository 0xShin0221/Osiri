name: Deploy

on:
  push:
    branches: [develop, main]
  workflow_dispatch:

jobs:
  supabase-deploy:
    runs-on: ubuntu-latest
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_PROJECT_ID: ${{ github.ref == 'refs/heads/main' && secrets.PRODUCTION_PROJECT_ID || secrets.STAGING_PROJECT_ID }}
      SUPABASE_DB_PASSWORD: ${{ github.ref == 'refs/heads/main' && secrets.PRODUCTION_DB_PASSWORD || secrets.STAGING_DB_PASSWORD }}
      ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Deploy Database Changes
        run: |
          supabase link --project-ref $SUPABASE_PROJECT_ID
          supabase db push --debug

      - name: Deploy Edge Functions
        run: supabase functions deploy --project-ref $SUPABASE_PROJECT_ID

  heroku-deploy:
    runs-on: ubuntu-latest
    needs: supabase-deploy  # Supabase„Éá„Éó„É≠„Ç§Âæå„Å´ÂÆüË°å
    env:
      ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
      HEROKU_APP_NAME: ${{ github.ref == 'refs/heads/main' && 'osiri-prod' || 'osiri-dev' }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Install Dependencies
        working-directory: ./heroku
        run: pnpm install

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.14
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ env.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          appdir: "heroku"

      - name: Notify Slack
        if: ${{ env.ENVIRONMENT == 'production' }}
        uses: tokorom/action-slack-incoming-webhook@main
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          text: |
            üöÄ Deployment Complete
            Environment: ${{ env.ENVIRONMENT }}
            Commit: ${{ github.sha }}
            Branch: ${{ github.ref_name }}