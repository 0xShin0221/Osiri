name: Release Management

on:
  pull_request:
    types: [closed]
    branches: [main, release]

jobs:
  create-release:
    # Execute only when PR is merged to release branch
    if: github.event.pull_request.merged == true && github.base_ref == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Generate enhanced release notes using OpenAI
      - name: Generate Release Notes
        id: release-notes
        uses: platisd/openai-pr-description@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          
      # Create GitHub release with both original and AI-enhanced descriptions
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.pull_request.title }}
          release_name: ${{ github.event.pull_request.title }}
          body: |
            ## Original Description
            ${{ github.event.pull_request.body }}

            ## AI Generated Summary
            ${{ steps.release-notes.outputs.description }}
          draft: false
          prerelease: false

      # Send release notification to Slack with enhanced content
      - name: Notify Slack
        uses: tokorom/action-slack-incoming-webhook@main
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          text: |
            ðŸ“¦ New Release: ${{ github.event.pull_request.title }}
            
            *Original Description*
            ${{ github.event.pull_request.body }}
            
            *AI Generated Summary*
            ${{ steps.release-notes.outputs.description }}

  create-release-pr:
    # Execute only when PR is merged to main branch
    if: github.event.pull_request.merged == true && github.base_ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Generate PR description with AI enhancement
      - name: Generate PR Description
        id: pr-description
        uses: platisd/openai-pr-description@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}

      # Get current package version
      - name: Get npm version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master

      # Create release PR with enhanced description
      - name: Create Release PR
        uses: bakunyo/git-pr-release-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_PR_RELEASE_BRANCH_PRODUCTION: release
          GIT_PR_RELEASE_BRANCH_STAGING: main
          GIT_PR_RELEASE_LABELS: release
          NPM_VERSION: v${{ steps.package-version.outputs.current-version}}
          GIT_PR_RELEASE_TEMPLATE: .github/PULL_REQUEST_TEMPLATE/.git-pr-template
          PR_DESCRIPTION: |
            ## Original PR Content
            ${{ github.event.pull_request.body }}

            ## AI Generated Summary
            ${{ steps.pr-description.outputs.description }}