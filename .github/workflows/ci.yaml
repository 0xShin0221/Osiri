name: CI

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches: [develop, main]

jobs:
  test:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: supabase/setup-cli@v1
        with:
          version: latest
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      # Database tests
      - run: supabase db start
      - run: supabase db lint
      - run: supabase test db
      
      # Type generation check
      - name: Verify generated types
        run: |
          supabase gen types typescript --local > types.gen.ts
          if ! git diff --ignore-space-at-eol --exit-code --quiet types.gen.ts; then
            echo "Detected uncommitted changes after build. See status below:"
            git diff
            exit 1
          fi

      # Function tests
      - run: supabase start
      - name: Test Edge Functions
        run: |
          cd supabase/functions
          deno task test
        env:
          SUPABASE_URL: ${{ secrets.STAGING_URL }} 
          SUPABASE_ANON_KEY: ${{ secrets.STAGING_ANON_KEY }}  
          SLACK_WAITLIST_WEBHOOK_URL: ${{ secrets.SLACK_WAITLIST_WEBHOOK_URL }}

  main-branch-test:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: supabase/setup-cli@v1
        with:
          version: latest
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      # Start Supabase
      - name: Start Supabase
        run: supabase start

      # Type check only for main
      - name: Verify generated types
        run: |
          supabase gen types typescript --local > types.gen.ts
          if ! git diff --ignore-space-at-eol --exit-code --quiet types.gen.ts; then
            echo "Detected uncommitted changes after build. See status below:"
            git diff
            exit 1
          fi

  db-check:
    needs: [test, main-branch-test]  
    if: always() 
    runs-on: ubuntu-latest
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_DB_PASSWORD: ${{ github.ref == 'refs/heads/main' && secrets.PRODUCTION_DB_PASSWORD || secrets.STAGING_DB_PASSWORD }}
      SUPABASE_PROJECT_ID: ${{ github.ref == 'refs/heads/main' && secrets.PRODUCTION_PROJECT_ID || secrets.STAGING_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v4
      - uses: supabase/setup-cli@v1
        with:
          version: latest
      - run: supabase link --project-ref $SUPABASE_PROJECT_ID
      - run: supabase db push --dry-run